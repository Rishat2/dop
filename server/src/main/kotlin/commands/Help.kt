package commands

class Help(override val cm: CollectionManager) : Command {
    override val name: String="help"
    override fun execute(): Information {
            return Information("help : вывести справку по доступным командам\n" +
                    "info : вывести в стандартный поток вывода информацию о коллекции (тип, дата инициализации, количество элементов и т.д.)\n" +
                    "show : вывести в стандартный поток вывода все элементы коллекции в строковом представлении\n" +
                    "add {element} : добавить новый элемент в коллекцию\n" +
                    "update id {element} : обновить значение элемента коллекции, id которого равен заданному\n" +
                    "remove_by_id id : удалить элемент из коллекции по его id\n" +
                    "clear : очистить коллекцию\n" +
                    "save : сохранить коллекцию в файл\n" +
                    "execute_script file_name : считать и исполнить скрипт из указанного файла. В скрипте содержатся команды в таком же виде, в котором их вводит пользователь в интерактивном режиме.\n" +
                    "exit : завершить программу (без сохранения в файл)\n" +
                    "remove_last : удалить последний элемент из коллекции\n" +
                    "remove_lower {element} : удалить из коллекции все элементы, меньшие, чем заданный\n" +
                    "sort : отсортировать коллекцию в естественном порядке\n" +
                    "remove_all_by_manufacturer manufacturer : удалить из коллекции все элементы, значение поля manufacturer которого эквивалентно заданному\n" +
                    "filter_less_than_part_number partNumber : вывести элементы, значение поля partNumber которых меньше заданного\n" +
                    "print_ascending : вывести элементы коллекции в порядке возрастания\n",0)
    }

    /*fun execute():Information {
        try {
            print(
                "help : вывести справку по доступным командам\n" +
                        "info : вывести в стандартный поток вывода информацию о коллекции (тип, дата инициализации, количество элементов и т.д.)\n" +
                        "show : вывести в стандартный поток вывода все элементы коллекции в строковом представлении\n" +
                        "add {element} : добавить новый элемент в коллекцию\n" +
                        "update id {element} : обновить значение элемента коллекции, id которого равен заданному\n" +
                        "remove_by_id id : удалить элемент из коллекции по его id\n" +
                        "clear : очистить коллекцию\n" +
                        "save : сохранить коллекцию в файл\n" +
                        "execute_script file_name : считать и исполнить скрипт из указанного файла. В скрипте содержатся команды в таком же виде, в котором их вводит пользователь в интерактивном режиме.\n" +
                        "exit : завершить программу (без сохранения в файл)\n" +
                        "remove_last : удалить последний элемент из коллекции\n" +
                        "remove_lower {element} : удалить из коллекции все элементы, меньшие, чем заданный\n" +
                        "sort : отсортировать коллекцию в естественном порядке\n" +
                        "remove_all_by_manufacturer manufacturer : удалить из коллекции все элементы, значение поля manufacturer которого эквивалентно заданному\n" +
                        "filter_less_than_part_number partNumber : вывести элементы, значение поля partNumber которых меньше заданного\n" +
                        "print_ascending : вывести элементы коллекции в порядке возрастания"
            )
            return Information("Команда выполнена успешно",0)
        }catch (e: Exception){
            return Information("Команду выполнить не удалось",1)
        }
    }*/

    /*override fun Check(command: String): String {
        if (command == name) {
            return "0"
        }
        return "Нет такой команды, возможно, вы имели в виду команду\"$name\""
    }*/
}